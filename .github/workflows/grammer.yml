# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  audit:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      # Setup
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.0.0

      # Dependencies
      - name: Install unix web browser
        run: sudo apt-get install -y lynx
      - name: Install JSON parser
        run: sudo apt-get install -y jq
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-02
      - name: npm i
        run: | 
          npm i gramma -g
          npm i markdown-to-json -g

      # Checkout repo $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
      # Action Code
      - name: Get Document
        continue-on-error: true
        run: |
          doc_url=$(m2j -c README.md | jq -r .README.url);
          echo "doc_url=$doc_url";
          echo "doc_url=$doc_url" >> $GITHUB_ENV;
          echo "${{ env.doc_url }}";

      # Action Code
      - name: Grammar Checks
        continue-on-error: true
        run: |
          echo "${{ env.doc_url }}";
          doc_body=$(lynx -force_html -nolist -dump ${{ env.doc_url }});
          gramma listen -p "${doc_body:200:20000}";

      - name: Link Checks
        continue-on-error: true
        uses: filiph/linkcheck@v2.0.15+1
        with:
          arguments: ${{ env.doc_url }} -e



